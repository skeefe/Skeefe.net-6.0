!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e():"function"==typeof define&&define.amd?define(e):e()}(this,function(){"use strict";var n=function(){function n(n,e,i){this._pendingMicroTasks=!1,this._pendingMacroTasks=!1,this._alreadyErrored=!1,this.runZone=Zone.current,this._finishCallback=n,this._failCallback=e,this.name="asyncTestZone for "+i}return n.prototype._finishCallbackIfDone=function(){var n=this;this._pendingMicroTasks||this._pendingMacroTasks||this.runZone.run(function(){setTimeout(function(){n._alreadyErrored||n._pendingMicroTasks||n._pendingMacroTasks||n._finishCallback()},0)})},n.prototype.onInvoke=function(n,e,i,a,o,s,t){try{return n.invoke(i,a,o,s,t)}finally{this._finishCallbackIfDone()}},n.prototype.onHandleError=function(n,e,i,a){var o=n.handleError(i,a);return o&&(this._failCallback(a),this._alreadyErrored=!0),!1},n.prototype.onScheduleTask=function(n,e,i,a){return"macroTask"==a.type&&"setInterval"==a.source?void this._failCallback("Cannot use setInterval from within an async zone test."):n.scheduleTask(i,a)},n.prototype.onHasTask=function(n,e,i,a){n.hasTask(i,a),"microTask"==a.change?(this._pendingMicroTasks=a.microTask,this._finishCallbackIfDone()):"macroTask"==a.change&&(this._pendingMacroTasks=a.macroTask,this._finishCallbackIfDone())},n}();Zone.AsyncTestZoneSpec=n});