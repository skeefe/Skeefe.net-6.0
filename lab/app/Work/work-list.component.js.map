{"version":3,"sources":["app/Work/work-list.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAaA;gBAIC,2BACS,OAAoB,EACpB,KAAqB,EACrB,MAAc;oBAFd,YAAO,GAAP,OAAO,CAAa;oBACpB,UAAK,GAAL,KAAK,CAAgB;oBACrB,WAAM,GAAN,MAAM,CAAQ;gBACnB,CAAC;gBAEL,sCAAU,GAAV,UAAW,IAAU;oBACpB,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC;gBACpC,CAAC;gBAED,oCAAQ,GAAR;oBAAA,iBAMC;oBALA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAc;wBACxC,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;wBAC/B,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;6BACrB,SAAS,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,KAAK,GAAG,KAAK,EAAlB,CAAkB,CAAC,CAAC;oBAC1C,CAAC,CAAC,CAAC;gBACJ,CAAC;gBAED,2CAAe,GAAf;oBACC,UAAU,CAAC;wBAEV,0GAA0G;wBAC1G,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBAEpD,0BAA0B;wBAC1B,CAAC,CAAC,wCAAwC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;wBACnE,CAAC,CAAC,sBAAsB,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;wBAEhD,uBAAuB;wBACvB,CAAC,CAAC,2BAA2B,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;wBAC5E,CAAC,CAAC,2BAA2B,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAEnE,CAAC,EAAE,EAAE,CAAC,CAAC;gBACR,CAAC;gBAED,oCAAQ,GAAR,UAAS,MAAc;oBACtB,iCAAiC;oBACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;oBAC3D,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oBAChC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;gBAC/B,CAAC;gBAhDF;oBAAC,gBAAS,CAAC;wBACV,WAAW,EAAE,0BAA0B;qBACvC,CAAC;;qCAAA;gBAgDF,wBAAC;YAAD,CA9CA,AA8CC,IAAA;YA9CD,iDA8CC,CAAA","file":"work-list.component.js","sourcesContent":["import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\n\r\nimport { Work } from './work';\r\nimport { WorkService } from './work.service';\r\n\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n\ttemplateUrl: './app/Work/work-list.htm'\r\n})\r\n\r\nexport class WorkListComponent implements OnInit, AfterViewInit {\r\n\tworks: Work[];\r\n\tpublic selectedId: string;\r\n\r\n\tconstructor(\r\n\t\tprivate service: WorkService,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate router: Router\r\n\t) { }\r\n\r\n\tisSelected(work: Work) {\r\n\t\treturn work.id === this.selectedId;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.route.params.forEach((params: Params) => {\r\n\t\t\tthis.selectedId = params['id'];\r\n\t\t\tthis.service.getWorks()\r\n\t\t\t\t.subscribe(works => this.works = works);\r\n\t\t});\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\tsetTimeout(function() { //Rewrite this - should not use a timeout.\r\n\r\n\t\t\t//this.service.activeWork(window.location.pathname.split('/')[2]); //Unable to call from within a timeout.\r\n\t\t\tvar workID = window.location.pathname.split('/')[2];\r\n\r\n\t\t\t//Remove old active state.\r\n\t\t\t$('#work-list option[selected=\"selected\"]').removeAttr('selected');\r\n\t\t\t$('#work-list li.active').removeClass('active');\r\n\r\n\t\t\t//Add new active state.\r\n\t\t\t$('#work-list option[value=\"' + workID + '\"]').attr('selected', 'selected');\r\n\t\t\t$('#work-list li[data-work=\"' + workID + '\"]').addClass('active');\r\n\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tonSelect(workID: String) {\r\n\t\t//this.service.destroyFlickity();\r\n\t\tthis.router.navigate([workID], { relativeTo: this.route });\r\n\t\tthis.service.activeWork(workID);\r\n\t\tthis.service.reloadFlickity();\r\n\t}\r\n\r\n}"],"sourceRoot":"/lab"}