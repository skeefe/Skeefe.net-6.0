{"version":3,"sources":["app/Work/work.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAUA;gBACC,qBAAoB,IAAU;oBAAV,SAAI,GAAJ,IAAI,CAAM;oBAEtB,aAAQ,GAAG,gBAAgB,CAAC;gBAFF,CAAC;gBAInC,iBAAiB;gBACjB,8BAAQ,GAAR;oBACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;yBAClC,GAAG,CAAC,UAAC,GAAa,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;yBAClC,KAAK,CAAC,UAAC,KAAU,IAAK,OAAA,uBAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,EAAtD,CAAsD,CAAC,CAAC;gBAChF,CAAC;gBAED,sBAAsB;gBACtB,6BAAO,GAAP,UAAQ,MAAc;oBACrB,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE;yBACrB,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,EAAE,KAAK,MAAM,EAAlB,CAAkB,CAAC,EAAxC,CAAwC,CAAC,CAAC;gBACzD,CAAC;gBAED,kBAAkB;gBAClB,qCAAe,GAAf;oBACC,CAAC,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC;wBACvB,YAAY,EAAE,IAAI;wBAClB,YAAY,EAAE,kBAAkB;wBAChC,eAAe,EAAE,KAAK;qBACtB,CAAC,CAAC;oBACH,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBAC1B,CAAC;gBAED,kBAAkB;gBAClB,qCAAe,GAAf;oBACC,CAAC,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;oBACnC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBAC1B,CAAC;gBAED,iBAAiB;gBACjB,oCAAc,GAAd;oBACC,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,UAAU,CAAC;wBACV,iFAAiF;wBACjF,CAAC,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC;4BACvB,YAAY,EAAE,IAAI;4BAClB,YAAY,EAAE,kBAAkB;4BAChC,eAAe,EAAE,KAAK;yBACtB,CAAC,CAAC;oBACJ,CAAC,EAAE,EAAE,CAAC,CAAC;oBACP,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACzB,CAAC;gBAED,qBAAqB;gBACrB,gCAAU,GAAV,UAAW,YAAY;oBACtB,0BAA0B;oBAC1B,CAAC,CAAC,wCAAwC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;oBACnE,CAAC,CAAC,sBAAsB,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;oBAEhD,uBAAuB;oBACvB,CAAC,CAAC,2BAA2B,GAAG,YAAY,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;oBAClF,CAAC,CAAC,2BAA2B,GAAG,YAAY,GAAG,IAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACzE,CAAC;gBA1DF;oBAAC,iBAAU,EAAE;;+BAAA;gBA2Db,kBAAC;YAAD,CA1DA,AA0DC,IAAA;YA1DD,qCA0DC,CAAA","file":"work.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { Work } from './work';\r\n\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable()\r\nexport class WorkService {\r\n\tconstructor(private http: Http) { }\r\n\r\n\tprivate workData = 'data/work.json';\r\n\r\n\t//Return all Work\r\n\tgetWorks(): Observable<Work[]> {\r\n\t\treturn this.http.get(this.workData)\r\n\t\t.map((res: Response) => res.json())\r\n\t\t.catch((error: any) => Observable.throw(error.json().error || 'Server error'));\r\n\t}\r\n\r\n\t//Return selected Work\r\n\tgetWork(workID: string) {\r\n\t\treturn this.getWorks()\r\n\t\t.map(works => works.filter(work => work.id === workID));\r\n\t}\r\n\r\n\t//Trigger Flickity\r\n\ttriggerFlickity() {\r\n\t\t$('.carousel').flickity({\r\n\t\t\timagesLoaded: true,\r\n\t\t\tcellSelector: '.carousel__slide',\r\n\t\t\tpercentPosition: false\r\n\t\t});\r\n\t\tconsole.log('triggered');\r\n\t}\r\n\r\n\t//Destroy Flickity\r\n\tdestroyFlickity() {\r\n\t\t$('.carousel').flickity('destroy');\r\n\t\tconsole.log('destroyed');\r\n\t}\r\n\r\n\t//Reload Flickity\r\n\treloadFlickity() {\r\n\t\tthis.destroyFlickity();\r\n\t\tsetTimeout(function() { //Rewrite this - should not use a timeout. The issue I have not been able to setup a callback function for the ngFor on the Carousel element.\r\n\t\t\t//this.triggerFlickity(); //Unable to call this function from within the timeout.\r\n\t\t\t$('.carousel').flickity({\r\n\t\t\t\timagesLoaded: true,\r\n\t\t\t\tcellSelector: '.carousel__slide',\r\n\t\t\t\tpercentPosition: false\r\n\t\t\t});\r\n\t\t}, 50);\r\n\t\tconsole.log('reloaded');\r\n\t}\r\n\r\n\t//Set active classes.\r\n\tactiveWork(selectedWork) {\r\n\t\t//Remove old active state.\r\n\t\t$('#work-list option[selected=\"selected\"]').removeAttr('selected');\r\n\t\t$('#work-list li.active').removeClass('active');\r\n\r\n\t\t//Add new active state.\r\n\t\t$('#work-list option[value=\"' + selectedWork + '\"]').attr('selected', 'selected');\r\n\t\t$('#work-list li[data-work=\"' + selectedWork + '\"]').addClass('active');\r\n\t}\r\n}"],"sourceRoot":"/lab"}