{"version":3,"sources":["app/safe-pipe.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAOA;gBAEC,kBAAsB,UAAwB;oBAAxB,eAAU,GAAV,UAAU,CAAc;gBAE9C,CAAC;gBAEM,4BAAS,GAAhB,UAAiB,KAAa,EAAE,IAAqB;oBAArB,oBAAqB,GAArB,aAAqB;oBACpD,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACd,KAAK,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;wBACnE,KAAK,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;wBACrE,KAAK,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;wBACvE,KAAK,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;wBACjE,KAAK,aAAa,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,8BAA8B,CAAC,KAAK,CAAC,CAAC;wBACjF,SAAS,MAAM,IAAI,KAAK,CAAC,kCAAgC,IAAM,CAAC,CAAC;oBAClE,CAAC;gBACF,CAAC;gBAlBF;oBAAC,WAAI,CAAC;wBACL,IAAI,EAAE,MAAM;qBACZ,CAAC;;4BAAA;gBAkBF,eAAC;YAAD,CAjBA,AAiBC,IAAA;YAjBD,+BAiBC,CAAA","file":"safe-pipe.js","sourcesContent":["//import { Pipe } from '@angular/core';\r\nimport { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n\tname: 'safe'\r\n})\r\nexport class SafePipe {\r\n\r\n\tconstructor(protected _sanitizer: DomSanitizer) {\r\n\r\n\t}\r\n\r\n\tpublic transform(value: string, type: string = 'html'): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'html': return this._sanitizer.bypassSecurityTrustHtml(value);\r\n\t\t\tcase 'style': return this._sanitizer.bypassSecurityTrustStyle(value);\r\n\t\t\tcase 'script': return this._sanitizer.bypassSecurityTrustScript(value);\r\n\t\t\tcase 'url': return this._sanitizer.bypassSecurityTrustUrl(value);\r\n\t\t\tcase 'resourceUrl': return this._sanitizer.bypassSecurityTrustResourceUrl(value);\r\n\t\t\tdefault: throw new Error(`Invalid safe type specified: ${type}`);\r\n\t\t}\r\n\t}\r\n\r\n}"],"sourceRoot":"/lab"}