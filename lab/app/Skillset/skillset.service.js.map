{"version":3,"sources":["app/Skillset/skillset.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAMA;gBACC,qCAAqC;gBACrC,yBAAoB,IAAU;oBAAV,SAAI,GAAJ,IAAI,CAAM;oBAEtB,iBAAY,GAAG,oBAAoB,CAAC,CAAC,EAAE;gBAFb,CAAC;gBAInC,mBAAmB;gBACnB,qCAAW,GAAX;oBACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;yBACtC,GAAG,CAAC,UAAC,GAAa,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;yBAClC,KAAK,CAAC,UAAC,KAAU,IAAK,OAAA,uBAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,EAAtD,CAAsD,CAAC,CAAC;gBAChF,CAAC;gBAZF;oBAAC,iBAAU,EAAE;;mCAAA;gBAcb,sBAAC;YAAD,CAbA,AAaC,IAAA;YAbD,6CAaC,CAAA","file":"skillset.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Skill } from './skill';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class SkillsetService {\r\n\t// Resolve HTTP using the constructor\r\n\tconstructor(private http: Http) { }\r\n\r\n\tprivate skillsetData = 'data/skillset.json'; //\r\n\r\n\t// Fetch all Skills\r\n\tgetSkillset(): Observable<Skill[]> {\r\n\t\treturn this.http.get(this.skillsetData)\r\n\t\t.map((res: Response) => res.json())\r\n\t\t.catch((error: any) => Observable.throw(error.json().error || 'Server error'));\r\n\t}\r\n\r\n}"],"sourceRoot":"/lab"}